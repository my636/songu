<?phpclass OauthApi extends Api{	//获取RequestKey	public function request_key(){		return array($this->getRequestKey());	}	//获取8位RequestKey	private function getRequestKey(){		return "THINKSNS";	//不要修改	}	//认证方法	public function authorize(){		$_REQUEST = array_merge($_GET,$_POST);		if(!empty($_REQUEST['uid']) && !empty($_REQUEST['passwd'])){			//帐号、密码通过加密			$username = desdecrypt(t($_REQUEST['uid']), $this->getRequestKey());				$password = desdecrypt(t($_REQUEST['passwd']), $this->getRequestKey());			//判断帐号类型	    	if($this->isValidEmail($username)){	    		$map['email'] = $username;	    	}else{	    		$map['uname'] = $username;	    	}	    	//根据帐号获取用户信息	    	$user = model('User')->where($map)->field('uid,email,password,login_salt')->find();						//判断密码是否正确			if($user && md5($password.$user['login_salt']) == $user['password']){				if( $login = D('')->table(C('DB_PREFIX').'login')->where("uid=".$user['uid']." AND type='location'")->find() ){					$data['oauth_token']         = $login['oauth_token'];					$data['oauth_token_secret']  = $login['oauth_token_secret'];					$data['uid']                 = $user['uid'];				}else{					$data['oauth_token']         = getOAuthToken($user['uid']);					$data['oauth_token_secret']  = getOAuthTokenSecret();					$data['uid']                 = $user['uid'];					$savedata['type']            = 'location';					$savedata = array_merge($savedata,$data);					D('')->table(C('DB_PREFIX').'login')->add($savedata);				}				return $data;			}else{				$this->verifyError();			}    	}else{    		$this->verifyError();    	}	}	//注销帐号，刷新token	public function logout(){		$_REQUEST = array_merge($_GET,$_POST);		if(!empty($_REQUEST['uid'])){			//帐号、密码通过加密			$username = desdecrypt(t($_REQUEST['uid']), $this->getRequestKey());			}		//判断帐号类型    	if($this->isValidEmail($username)){    		$map['email'] = $username;    	}else{    		$map['uname'] = $username;    	}		//判断密码是否正确		$user = model('User')->where($map)->field('uid')->find();		if($user){			$data['oauth_token']         = getOAuthToken($user['uid']);			$data['oauth_token_secret']  = getOAuthTokenSecret();			$data['uid']                 = $user['uid'];			D('')->table(C('DB_PREFIX').'login')->where("uid=".$user['uid']." AND type='location'")->save($data);			return 1;		}else{			return 0;		}	}	//验证字符串是否是email	public function isValidEmail($email) {		return preg_match("/[_a-zA-Z\d\-\.]+@[_a-zA-Z\d\-]+(\.[_a-zA-Z\d\-]+)+$/i", $email) !== 0;	}}